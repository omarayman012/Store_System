﻿<!-- Bootstrap RTL + Icons -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.rtl.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet" />
@model Store_Sys.Models.ViewModels.OutFileViewModel

<style>
    /* زر أيقونة دائري */
    .icon-btn {
        --size: 36px;
        width: var(--size);
        height: var(--size);
        border-radius: 50%;
        border: none;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        font-size: 1rem;
        cursor: pointer;
        transition: transform .2s ease,box-shadow .2s ease;
        box-shadow: 0 2px 4px rgba(0,0,0,.15);
        color: #fff;
    }

    .icon-add {
        background: #28c76f;
    }
    /* أخضر */
    .icon-del {
        background: #ea5455;
    }
    /* أحمر */

    .icon-btn:hover {
        transform: scale(1.12) rotate(5deg);
        box-shadow: 0 4px 8px rgba(0,0,0,.25);
    }

    .icon-btn:active {
        transform: scale(.95);
    }

    .icon-btn i {
        pointer-events: none;
    }

    div.searchable {
        width: 97%;
        position: relative;
    }

    .searchable input {
        width: 100%;
        height: 40px;
        font-size: 18px;
        padding: 2px 10px;
        box-sizing: border-box;
        border: 1px solid #ced4da;
        border-radius: .25rem;
    }

    .searchable ul {
        display: none;
        list-style-type: none;
        background-color: #fff;
        border-radius: 0 0 5px 5px;
        border: 1px solid #add8e6;
        border-top: none;
        max-height: 180px;
        margin: 0;
        overflow-y: scroll;
        padding: 0;
        position: absolute;
        width: 100%;
        z-index: 1000;
    }

        .searchable ul li {
            padding: 7px 9px;
            border-bottom: 1px solid #e1e1e1;
            cursor: pointer;
            color: #6e6e6e;
        }

            .searchable ul li.selected {
                background-color: #e8e8e8;
                color: #333;
            }

    label {
        display: block;
        margin-bottom: 5px;
        font-weight: bold;
    }

    input[type="text"], input[type="date"], textarea {
        width: 100%;
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    input[type="file"] {
        display: inline-block;
    }

    .multi-select {
        display: flex;
        box-sizing: border-box;
        flex-direction: column;
        position: relative;
        width: 100%;
        user-select: none;
    }

        .multi-select .multi-select-header {
            border: 1px solid #dee2e6;
            padding: 7px 30px 7px 12px;
            overflow: hidden;
            gap: 7px;
            min-height: 45px;
        }

            .multi-select .multi-select-header::after {
                content: "";
                display: block;
                position: absolute;
                top: 50%;
                right: 15px;
                transform: translateY(-50%);
                background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23949ba3' viewBox='0 0 16 16'%3E%3Cpath d='M8 13.1l-8-8 2.1-2.2 5.9 5.9 5.9-5.9 2.1 2.2z'/%3E%3C/svg%3E");
                height: 12px;
                width: 12px;
            }






            .multi-select .multi-select-header.multi-select-header-active {
                border-color: #c1c9d0;
            }

                .multi-select .multi-select-header.multi-select-header-active::after {
                    transform: translateY(-50%) rotate(180deg);
                }

                .multi-select .multi-select-header.multi-select-header-active + .multi-select-options {
                    display: flex;
                }

            .multi-select .multi-select-header .multi-select-header-placeholder {
                color: #65727e;
            }

            .multi-select .multi-select-header .multi-select-header-option {
                display: inline-flex;
                align-items: center;
                background-color: #f3f4f7;
                font-size: 14px;
                padding: 3px 8px;
                border-radius: 5px;
            }

            .multi-select .multi-select-header .multi-select-header-max {
                font-size: 14px;
                color: #65727e;
            }

        .multi-select .multi-select-options {
            display: none;
            box-sizing: border-box;
            flex-flow: wrap;
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            z-index: 999;
            margin-top: 5px;
            padding: 5px;
            background-color: #fff;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            max-height: 200px;
            overflow-y: auto;
            overflow-x: hidden;
        }

            .multi-select .multi-select-options::-webkit-scrollbar {
                width: 5px;
            }

            .multi-select .multi-select-options::-webkit-scrollbar-track {
                background: #f0f1f3;
            }

            .multi-select .multi-select-options::-webkit-scrollbar-thumb {
                background: #cdcfd1;
            }

                .multi-select .multi-select-options::-webkit-scrollbar-thumb:hover {
                    background: #b2b6b9;
                }

            .multi-select .multi-select-options .multi-select-option, .multi-select .multi-select-options .multi-select-all {
                padding: 4px 12px;
                height: 42px;
            }

                .multi-select .multi-select-options .multi-select-option .multi-select-option-radio, .multi-select .multi-select-options .multi-select-all .multi-select-option-radio {
                    margin-right: 14px;
                    height: 16px;
                    width: 16px;
                    border: 1px solid #ced4da;
                    border-radius: 4px;
                }

                .multi-select .multi-select-options .multi-select-option .multi-select-option-text, .multi-select .multi-select-options .multi-select-all .multi-select-option-text {
                    box-sizing: border-box;
                    flex: 1;
                    overflow: hidden;
                    text-overflow: ellipsis;
                    white-space: nowrap;
                    color: inherit;
                    font-size: 16px;
                    line-height: 20px;
                }

                .multi-select .multi-select-options .multi-select-option.multi-select-selected .multi-select-option-radio, .multi-select .multi-select-options .multi-select-all.multi-select-selected .multi-select-option-radio {
                    border-color: #40c979;
                    background-color: #40c979;
                }

                    .multi-select .multi-select-options .multi-select-option.multi-select-selected .multi-select-option-radio::after, .multi-select .multi-select-options .multi-select-all.multi-select-selected .multi-select-option-radio::after {
                        content: "";
                        display: block;
                        width: 3px;
                        height: 7px;
                        margin: 0.12em 0 0 0.27em;
                        border: solid #fff;
                        border-width: 0 0.15em 0.15em 0;
                        transform: rotate(45deg);
                    }

                .multi-select .multi-select-options .multi-select-option.multi-select-selected .multi-select-option-text, .multi-select .multi-select-options .multi-select-all.multi-select-selected .multi-select-option-text {
                    color: #40c979;
                }

                .multi-select .multi-select-options .multi-select-option:hover, .multi-select .multi-select-options .multi-select-option:active, .multi-select .multi-select-options .multi-select-all:hover, .multi-select .multi-select-options .multi-select-all:active {
                    background-color: #f3f4f7;
                }

            .multi-select .multi-select-options .multi-select-all {
                border-bottom: 1px solid #f1f3f5;
                border-radius: 0;
            }

            .multi-select .multi-select-options .multi-select-search {
                padding: 7px 10px;
                border: 1px solid #dee2e6;
                border-radius: 5px;
                margin: 10px 10px 5px 10px;
                width: 100%;
                outline: none;
                font-size: 16px;
            }

                .multi-select .multi-select-options .multi-select-search::placeholder {
                    color: #b2b5b9;
                }

        .multi-select .multi-select-header, .multi-select .multi-select-option, .multi-select .multi-select-all {
            display: flex;
            flex-wrap: wrap;
            box-sizing: border-box;
            align-items: center;
            border-radius: 5px;
            cursor: pointer;
            display: flex;
            align-items: center;
            width: 100%;
            font-size: 16px;
            color: #212529;
        }
</style>
<form asp-action="AddFile" asp-controller="OutFiles" method="post">
   <div class="mt-5">
    <div id="personal-info" class="shadow p-3">
        <span class="bg-color d-inline-block px-2 mb-2">إضافة مستند جديد مخرج</span>

        <!-- معلومات المستند -->
        <div class="row">
            <div class="col-sm-12 col-md-2 mt-3">
                <label class="form-label">رقم المستند</label>
                <input class="form-control" placeholder="أدخل رقم مستند" asp-for="OutFile.DocumentNum" required />
                <span asp-validation-for="OutFile.DocumentNum" class="text-danger"></span>
            </div>

            <div class="col-sm-12 col-md-2 mt-3">
                <label class="form-label">تاريخ المستند</label>
                <input class="form-control" type="date" asp-for="OutFile.Documentdate" required />
                <span asp-validation-for="OutFile.Documentdate" class="text-danger"></span>
            </div>
            <!-- اسم الجهة المُجهز لها -->
            <!-- نوع الجهة: شخص أو قسم -->
            <div class="col-sm-12 col-md-2 mt-3">
                <label class="form-label">اسم الجهة المُجهز لها</label>
                <select id="entityType" class="form-select" onchange="toggleSearchableFields()" required asp-for="OutFile.OutputTypeId">
                    <option value="">اختر نوع الجهة</option>
                    @foreach (var item in Model.OutputTypesList)
                    {
                        <option value="@item.Value">@item.Text</option>
                    }
                </select>
                <span asp-validation-for="OutFile.OutputTypeId" class="text-danger"></span>
            </div>

            <!-- الموظفين -->
            <div class="col-sm-12 col-md-2 mt-3 ">
                <label class="form-label">أختر الموظف</label>
                <select class="form-select" asp-for="OutFile.PersonId">
                    <option value="">اختر الموظف</option>
                    @foreach (var person in Model.PersonsList)
                    {
                        <option value="@person.Value">@person.Text</option>
                    }
                </select>
                <span asp-validation-for="OutFile.PersonId" class="text-danger"></span>
            </div>
            <!-- الأقسام -->
            <div class="col-sm-12 col-md-2 mt-3 ">
                <label class="form-label">أختر القسم</label>
                <select class="form-select" asp-for="OutFile.DepartmentId">
                    <option value="">اختر القسم</option>
                    @foreach (var department in Model.DepartmentsList)
                    {
                        <option value="@department.Value">@department.Text</option>
                    }
                </select>
                <span asp-validation-for="OutFile.DepartmentId" class="text-danger"></span>
            </div>


            <!-- رقم الطلب -->
            <div class="col-sm-12 col-md-2 mt-3">
                <label class="form-label">رقم الطلب</label>
                <input type="text" class="form-control" placeholder="أدخل رقم الطلب" asp-for="OutFile.OrderNum" required />
                <span asp-validation-for="OutFile.OrderNum" class="text-danger"></span>
            </div>

            <!-- تاريخ الطلب -->
            <div class="col-sm-12 col-md-2 mt-3">
                <label class="form-label">تاريخ الطلب</label>
                <input type="date" class="form-control" asp-for="OutFile.OrderDate" required />
                <span asp-validation-for="OutFile.OrderDate" class="text-danger"></span>
            </div>

            <!-- مصدر الصرف -->
            <div class="col-sm-12 col-md-2 mt-3">
                <label class="form-label">مصدر الصرف</label>
                <select class="form-select" asp-for="OutFile.SourceId" required>
                    <option value="">اختر المصدر</option>
                    @foreach (var source in Model.SourcesList)
                    {
                        <option value="@source.Value">@source.Text</option>
                    }
                </select>
                <span asp-validation-for="OutFile.SourceId" class="text-danger"></span>
            </div>

            <!-- رقم الموافقة على التجهيز -->
            <div class="col-sm-12 col-md-2 mt-3">
                <label class="form-label">رقم الموافقة على التجهيز</label>
                <input type="text" class="form-control" placeholder="أدخل رقم الموافقة" asp-for="OutFile.ApprovalNum" required />
                <span asp-validation-for="OutFile.ApprovalNum" class="text-danger"></span>
            </div>

            <!-- تاريخ الموافقة على التجهيز -->
            <div class="col-sm-12 col-md-2 mt-3">
                <label class="form-label">تاريخ الموافقة على التجهيز</label>
                <input type="date" class="form-control" asp-for="OutFile.ApprovalDate" required />
                <span asp-validation-for="OutFile.ApprovalDate" class="text-danger"></span>
            </div>


        

            <!-- اسم المُجهز -->
            <div class="col-sm-12 col-md-2 mt-3">
                <label class="form-label">اسم المُجهز</label>
                    <select class="form-select" asp-for="OutFile.PreparedPerson" required>
                    <option value="">اختر المُجهز</option>
                    @foreach (var person in Model.PersonsList)
                    {
                        <option value="@person.Value">@person.Text</option>
                    }
                </select>
                    <span asp-validation-for="OutFile.PreparedPerson" class="text-danger"></span>
            </div>

            <!-- اسم المُجهز له -->
            <div class="col-sm-12 col-md-2 mt-3">
                <label class="form-label">اسم المُجهز له</label>
                <input type="text" class="form-control" placeholder="أدخل اسم المُجهز له" asp-for="OutFile.PersonPrepared" required />
                <span asp-validation-for="OutFile.PersonPrepared" class="text-danger"></span>
            </div>



        </div>

        <hr>
        <h3 class="text-center my-3">إضافة مخرجات</h3>

        <!-- جدول المواد -->
        <table class="table table-striped align-middle text-center">
            <thead>
                <tr>
                   
                    <th>اسم المادة</th>
                    
                    <th>الوحدة</th>
                    <th>العدد</th>
                    <th>السعر</th>
                    <th>السعر الإجمالي</th>
                   @*  <th>تاريخ الإدخال</th>
                    <th>سنة التجهيز</th> *@
                    <th>التفاصيل</th>
                    <td>
                        <button class="icon-btn icon-add" type="button" title="إضافة صف"><i class="bi bi-plus-lg"></i></button>
                    </td>
                </tr>
            </thead>

            <tbody id="subjectsBody">
                <!-- الصفّ الأوّل (قالب) بلا زرّ حذف -->
                    <tr class="template-row">
                       
                        <td>
                            <select class="form-select material-select" name="Items[0].MaterialId" required>
                                <option value="">اختر اسم المادة…</option>
                                @foreach (var item in Model.MaterialsList)
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            </select>
                            <span class="text-danger" data-valmsg-for="Items[0].MaterialId" data-valmsg-replace="true"></span>
                        </td>
                        <td>
                            <select class="form-select units-select" name="Items[0].UnitsId" required>
                                <option value="">اختر الوحدة…</option>
                                @foreach (var item in Model.UnitsList)
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            </select>
                            <span class="text-danger" data-valmsg-for="Items[0].UnitsId" data-valmsg-replace="true"></span>
                        </td>
                        <td>
                            <input type="number" class="form-control  quantity" name="Items[0].Quantity" required />

                            <span class="text-danger" data-valmsg-for="Items[0].Quantity" data-valmsg-replace="true"></span>
                        </td>
                        <td>
                            <input type="number" class="form-control price" name="Items[0].Price" required />
                            <span class="text-danger" data-valmsg-for="Items[0].Price" data-valmsg-replace="true"></span>
                        </td>
                        <td>
                            <input type="number" class="form-control total" name="Items[0].Total" readonly />
                            <span class="text-danger" data-valmsg-for="Items[0].Total" data-valmsg-replace="true"></span>
                        </td>
                        <td><textarea class="form-control" name="Items[0].Details"></textarea></td>
                        <td></td>
                    </tr>
            </tbody>
        </table>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="col-sm-12 mt-2">
            <input type="submit" class="form-control color-btn" value="حفظ" />
        </div>
    </div>
</div>
</form>


@section Scripts {
    <script>
        $(document).on("input", ".quantity, .price", function () {
            let row = $(this).closest("tr"); // الصف الحالي
            let quantity = parseFloat(row.find(".quantity").val()) || 0;
            let price = parseFloat(row.find(".price").val()) || 0;
            let total = quantity * price;
            row.find(".total").val(total.toFixed(2)); // خانتين عشريتين
        });
    </script>
}
<!-- تحميل مكتبات الفاليديشن (jQuery + jQuery.validate + jQuery.validate.unobtrusive) -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.5/dist/jquery.validate.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/jquery-validation-unobtrusive@3.2.11/dist/jquery.validate.unobtrusive.min.js"></script>



<script>
    const body = document.getElementById('subjectsBody');
    const addBtn = document.querySelector('.icon-add');

    function refreshIndices() {
        body.querySelectorAll('tr').forEach((tr, i) => {
            tr.querySelector('.row-index').textContent = i + 1;
            tr.querySelector('select.material-select').name = `Items[${i}].MaterialId`;
            tr.querySelector('select.units-select').name = `Items[${i}].UnitsId`;
            tr.querySelector('input[name$="Quantity"]').name = `Items[${i}].Quantity`;
            tr.querySelector('input[name$="Price"]').name = `Items[${i}].Price`;
            tr.querySelector('input[name$="Total"]').name = `Items[${i}].Total`;
            tr.querySelector('input[name$="EntryDate"]').name = `Items[${i}].EntryDate`;
            tr.querySelector('select.years-select').name = `Items[${i}].YearDateId`;
            tr.querySelector('textarea').name = `Items[${i}].Details`;
        });
    }

    function addRow() {
        const template = body.querySelector('.template-row');
        const clone = template.cloneNode(true);

        clone.querySelectorAll('input, select, textarea').forEach(el => el.value = '');
        clone.lastElementChild.innerHTML = `<button class="icon-btn icon-del" title="حذف الصف"><i class="bi bi-x-lg"></i></button>`;

        body.appendChild(clone);
        refreshIndices();
    }

    addBtn.addEventListener('click', addRow);

    body.addEventListener('click', e => {
        const delBtn = e.target.closest('.icon-del');
        if (delBtn) {
            delBtn.closest('tr').remove();
            refreshIndices();
        }
    });

    refreshIndices();
</script>
<script>
    $(document).ready(function () {
        $('#dropdownDisplay').on('click', function () {
            $('#dropdownContent').toggle();
        });

        $('#searchInput').on('input', function () {
            let value = $(this).val().toLowerCase();
            $('#dropdownList li').filter(function () {
                $(this).toggle($(this).text()
                       .toLowerCase().indexOf(value) > -1);
            });
        });

        $('#dropdownList').on('click', 'li', function () {
            $('#dropdownDisplay').text($(this).text());
            $('#dropdownContent').hide();
        });

        $(document).on('click', function (e) {
            if (!$(e.target).closest('.search-dropdown').length) {
                $('#dropdownContent').hide();
            }
        });
    });
</script>
<!-- ‎Scripts ‎-->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/jquery@3.7.1/dist/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
<script>
    $(document).ready(function () {

        // Search button click event
        $('#searchButton').click(function () {
            debugger;
            var citiesIds = $('#CitiesIds').val() || [];

            $.ajax({
                url: '/EmployeeSalaries/GetUsers',
                type: 'GET',
                data: { citiesIds: JSON.stringify(citiesIds) },
                success: function (data) {
                    debugger;
                    var usersDropdown = $('#UsersIds');
                    usersDropdown.empty().hide();

                    if (data && Array.isArray(data) && data.length > 0) {
                        $.each(data, function (index, item) {
                            if (item.value && item.text) {
                                usersDropdown.append(`<li data-value="${item.value}" onclick="selectEmployee(this)">${item.text}</li>`);
                            }
                        });
                        usersDropdown.show();
                    } else {
                        usersDropdown.append(`<li class="text-muted">No employees found</li>`).show();
                    }
                },
                error: function () {
                    alert('Error loading employees. Please try again.');
                }
            });
        });
    });

    // Function to show employee list when input is clicked
    function showEmployeeList() {
        $('#UsersIds').toggle();
    }

    // Function to select an employee
    function selectEmployee(element) {
        var selectedValue = $(element).data('value');
        var selectedText = $(element).text();

        $('#selectedEmployee').val(selectedValue);
        $('#employeeInput').val(selectedText);
        $('#UsersIds').hide();
    }
</script>

<script>
    function filterFunction(input, listId) {
        const filter = input.value.toLowerCase();
        const list = document.getElementById(listId);
        const items = list.getElementsByTagName("li");

        for (let i = 0; i < items.length; i++) {
            const text = items[i].innerText || items[i].textContent;
            items[i].style.display = text.toLowerCase().indexOf(filter) > -1 ? "" : "none";
        }
    }

    function selectEmployee(listItem) {
        // Highlight the selected item
        const list = document.getElementById("UsersIds");
        const items = list.getElementsByTagName("li");
        for (let i = 0; i < items.length; i++) {
            items[i].classList.remove("selected");
        }
        listItem.classList.add("selected");

        // Set the selected employee's value in the hidden input
        const employeeValue = listItem.getAttribute("data-value");
        document.getElementById("selectedEmployee").value = employeeValue;
    }

    function confirmSelection() {
        const selectedEmployee = document.getElementById("selectedEmployee").value;
        const errorMessage = document.getElementById("errorMessage");

        if (!selectedEmployee) {
            errorMessage.innerText = "يرجى اختيار موظف.";
        } else {
            errorMessage.innerText = ""; // Clear any previous error
            document.getElementById("employeeForm").submit(); // Navigate to AddSalary action
        }
    }

</script>

<script>
    function filterFunction(that, event) {
        let container = that.closest(".searchable");
        let input_val = that.value.toUpperCase();
        let ul = container.querySelector("ul");
        let li = ul.getElementsByTagName("li");

        ul.style.display = input_val ? "block" : "none";

        for (let i = 0; i < li.length; i++) {
            let txtValue = li[i].textContent || li[i].innerText;
            li[i].style.display = txtValue.toUpperCase().indexOf(input_val) > -1 ? "" : "none";
        }

        if (["ArrowDown", "ArrowUp", "Enter"].indexOf(event.key) != -1) {
            keyControl(event, container);
        } else {
            let visibleItems = container.querySelectorAll("ul li:not([style*='display: none'])");
            if (visibleItems.length > 0) {
                visibleItems[0].classList.add("selected");
            }
        }
    }

    function keyControl(e, container) {
        let selected = container.querySelector("ul li.selected");
        let visibleItems = container.querySelectorAll("ul li:not([style*='display: none'])");

        if (e.key == "ArrowDown") {
            if (!selected) {
                visibleItems[0].classList.add("selected");
            } else if (selected && selected.nextElementSibling) {
                selected.classList.remove("selected");
                selected.nextElementSibling.classList.add("selected");
            }
        } else if (e.key == "ArrowUp") {
            if (selected && selected.previousElementSibling) {
                selected.classList.remove("selected");
                selected.previousElementSibling.classList.add("selected");
            }
        } else if (e.key == "Enter") {
            if (selected) {
                container.querySelector("input").value = selected.textContent;
                container.querySelector("ul").style.display = "none";
            }
        }
    }

    document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll(".searchable input").forEach(function (input) {
            input.addEventListener('focus', function () {
                let ul = this.closest(".searchable").querySelector("ul");
                ul.style.display = "block";
            });

            input.addEventListener('blur', function () {
                let that = this;
                setTimeout(function () {
                    let ul = that.closest(".searchable").querySelector("ul");
                    ul.style.display = "none";
                }, 200);
            });
        });

        document.querySelectorAll(".searchable ul li").forEach(function (item) {
            item.addEventListener('click', function () {
                let input = this.closest(".searchable").querySelector("input");
                input.value = this.textContent;
                input.blur();
            });
        });
    });
</script>

